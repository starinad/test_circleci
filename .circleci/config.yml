version: 2.1
orbs:
  ruby: circleci/ruby@1.0.0

jobs:
  build:
    executor: "2.7.1"
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-gem-cache-{{ arch }}-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
      - run: bundle config set path vendor/bundle
      - run: bundle install
      - save_cache:
          key: v1-gem-cache-{{ arch }}-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
  rubocop:
    docker:
      - image: circleci/ruby:2.7.1
    executor: ruby/default
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-gem-cache-{{ arch }}-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
      - run: bundle config set path vendor/bundle
      - run: bundle install
      - run: bundle exec rubocop
  fasterer:
    docker:
      - image: circleci/ruby:2.7.1
    executor: ruby/default
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-gem-cache-{{ arch }}-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
      - run: bundle config set path vendor/bundle
      - run: bundle install
      - run: bundle exec fasterer

workflows:
  build_and_lint: # The name of our workflow is "build_and_test"
    jobs: # The list of jobs we run as part of this workflow.
      - build # Run build first.
      - rubocop: # Then run test,
          requires: # Test requires that build passes for it to run.
            - build # Finally, run the build job
      - fasterer: # Then run test,
          requires: # Test requires that build passes for it to run.
            - build # Finally, run the build job
#- ruby/bundle-install

# version: 2.1
# orbs:
#   ruby: circleci/ruby@1.0.0

# jobs:
#   build:
#     docker:
#       - image: circleci/ruby:2.7.1
#     executor: ruby/default
#     steps:
#       - checkout
#       - run:
#         name: "Testing"
#         command: echo "Hi"
